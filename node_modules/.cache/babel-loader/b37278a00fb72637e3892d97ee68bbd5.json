{"ast":null,"code":"var _jsxFileName = \"/Users/saravanan/ReactProjects/demo-reactapp/src/App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }],\n      resets: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDecrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n\n      if (counters[index].value >= 1) {\n        counters[index].value--;\n      }\n\n      this.setState({\n        counters\n      });\n    };\n\n    this.handlReset = () => {\n      //console.log('Event Handler called', counterId) ;\n      // const counters = this.state.counters.map(c => {c.value = 0; return c;});\n      const counters = [...this.state.resets];\n      this.setState({\n        counters: counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      //console.log('Event Handler called', counterId) ;\n      const counters = this.state.counters.filter(c => c.id != counterId);\n      this.setState({\n        counters: counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        totalCounters: this.state.counters.filter(c => c.value > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {\n          counters: this.state.counters,\n          onReset: this.handlReset,\n          onDecrement: this.handleDecrement,\n          onIncrement: this.handleIncrement,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saravanan/ReactProjects/demo-reactapp/src/App.js"],"names":["React","Component","NavBar","Counters","App","state","counters","id","value","resets","handleIncrement","counter","index","indexOf","setState","handleDecrement","handlReset","handleDelete","counterId","filter","c","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\n\nclass App extends React.Component {\n    state = {\n        counters: [\n            {id:1, value:0},\n            {id:2, value:0},\n            {id:3, value:0},\n            {id:4, value:0},\n        ],\n        resets: [\n            {id:1, value:0},\n            {id:2, value:0},\n            {id:3, value:0},\n            {id:4, value:0},\n        ]\n\n    }\n\n    handleIncrement = counter => {\n        const counters = [...this.state.counters];\n        const index = counters.indexOf(counter);\n        counters[index] = {...counter};\n        counters[index].value ++;\n        this.setState({counters});\n    }\n\n    handleDecrement = counter => {\n        const counters = [...this.state.counters];\n        const index = counters.indexOf(counter);\n        counters[index] = {...counter};\n        if(counters[index].value >=1){\n            counters[index].value --;\n        }\n        \n        this.setState({counters});\n    }\n\n\n    handlReset = () => {\n        //console.log('Event Handler called', counterId) ;\n       // const counters = this.state.counters.map(c => {c.value = 0; return c;});\n        const counters = [...this.state.resets];\n        this.setState({ counters: counters});\n    }\n    handleDelete = counterId => {\n        //console.log('Event Handler called', counterId) ;\n        const counters = this.state.counters.filter(c => c.id != counterId);\n        this.setState({ counters: counters});\n    }\n    render() { \n        return (\n        <React.Fragment>\n            <NavBar totalCounters={this.state.counters.filter(c => c.value >0).length}/>\n            <main className=\"container\">\n                <Counters \n                    counters = {this.state.counters}\n                    onReset = {this.handlReset}\n                    onDecrement = {this.handleDecrement}\n                    onIncrement = {this.handleIncrement}\n                    onDelete = {this.handleDelete}\n                />\n            </main>\n        </React.Fragment>\n        );\n    }\n}\n \nexport default App; "]},"metadata":{},"sourceType":"module"}