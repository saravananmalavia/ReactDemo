{"ast":null,"code":"var _jsxFileName = \"/Users/saravanan/ReactProjects/demo-reactapp/src/components/lifeCycle.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LifeCycle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hello: \"JavaTpoint\"\n    };\n    this.changeState = this.changeState.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ReactJS component's Lifecycle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Hello \", this.state.hello]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeState,\n        children: \"Click Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  componentWillMount() {\n    console.log('Component Will MOUNT!');\n  }\n\n  componentDidMount() {\n    console.log('Component Did MOUNT!');\n  }\n\n  changeState() {\n    this.setState({\n      hello: \"All!!- Its a great reactjs tutorial.\"\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    console.log('Component Will Recieve Props!');\n  }\n\n  shouldComponentUpdate(newProps, newState) {\n    return true;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('Component Will UPDATE!');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Component Did UPDATE!');\n  }\n\n  componentWillUnmount() {\n    console.log('Component Will UNMOUNT!');\n  }\n\n}\n\nexport default LifeCycle;","map":{"version":3,"sources":["/Users/saravanan/ReactProjects/demo-reactapp/src/components/lifeCycle.jsx"],"names":["React","Component","LifeCycle","constructor","props","state","hello","changeState","bind","render","componentWillMount","console","log","componentDidMount","setState","componentWillReceiveProps","newProps","shouldComponentUpdate","newState","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","componentWillUnmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,SAAN,SAAwBF,KAAK,CAACC,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACF;;AACDC,EAAAA,MAAM,GAAG;AACN,wBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAW,KAAKJ,KAAL,CAAWC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAI,KAAKC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAOF;;AACDG,EAAAA,kBAAkB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACF;;AACDC,EAAAA,iBAAiB,GAAG;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACF;;AACDL,EAAAA,WAAW,GAAE;AACV,SAAKO,QAAL,CAAc;AAACR,MAAAA,KAAK,EAAC;AAAP,KAAd;AACF;;AACDS,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AACjCL,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACF;;AACDK,EAAAA,qBAAqB,CAACD,QAAD,EAAWE,QAAX,EAAqB;AACvC,WAAO,IAAP;AACF;;AACDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvCV,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACF;;AACDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACtCb,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACF;;AACDa,EAAAA,oBAAoB,GAAG;AACpBd,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACF;;AAtCkC;;AAyCxC,eAAeV,SAAf","sourcesContent":["import React, { Component } from 'react';\nclass LifeCycle extends React.Component {\n    constructor(props) {  \n        super(props);  \n        this.state = {hello: \"JavaTpoint\"};  \n        this.changeState = this.changeState.bind(this)  \n     }    \n     render() {  \n        return (  \n           <div>  \n               <h1>ReactJS component's Lifecycle</h1>  \n               <h3>Hello {this.state.hello}</h3>  \n               <button onClick = {this.changeState}>Click Here!</button>          \n           </div>  \n        );  \n     }  \n     componentWillMount() {  \n        console.log('Component Will MOUNT!')  \n     }  \n     componentDidMount() {  \n        console.log('Component Did MOUNT!')  \n     }  \n     changeState(){  \n        this.setState({hello:\"All!!- Its a great reactjs tutorial.\"});  \n     }  \n     componentWillReceiveProps(newProps) {      \n        console.log('Component Will Recieve Props!')  \n     }  \n     shouldComponentUpdate(newProps, newState) {  \n        return true;  \n     }  \n     componentWillUpdate(nextProps, nextState) {  \n        console.log('Component Will UPDATE!');  \n     }  \n     componentDidUpdate(prevProps, prevState) {  \n        console.log('Component Did UPDATE!')  \n     }  \n     componentWillUnmount() {  \n        console.log('Component Will UNMOUNT!')  \n     }  \n}\n \nexport default LifeCycle;"]},"metadata":{},"sourceType":"module"}